version: "3.8"

networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - '/etc/letsencrypt:/etc/letsencrypt'
      - './data/certbot/www:/var/www/certbot'
    depends_on:
      - back
      - minio
    networks:
      - dev
    restart: unless-stopped
    env_file:
      - .env

  db:
    image: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_ADMIN_USER}
      MYSQL_PASSWORD: ${MYSQL_ADMIN_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./data/backups:/backups
      - ./data/mysql:/var/lib/mysql
    networks:
      - dev

  phpmyadmin:
    image: phpmyadmin
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - 3500:80
    environment:
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=300M
    networks:
      - dev

  back:
    depends_on:
      - db
    build:
      context: ./back
    restart: unless-stopped
    networks:
      - dev
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      args:
        VITE_APP_BACKEND_API_URL: ${VITE_APP_BACKEND_API_URL}
    depends_on:
      - back
    restart: unless-stopped
    networks:
      - dev
    env_file:
      - .env

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Web UI
    volumes:
      - ./data/minio:/data
    networks:
      - dev
    restart: unless-stopped
